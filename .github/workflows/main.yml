#
#  На данный момент забили на
#  1. Пуш в какой-то регистри — нахуй
#  2. Stateless — нахуй
#         В перспективе надо вытащить базу из sqlite в какой-то внешнюю базку
#         И тогда один контейнер с python надо разбить на два: отдельно бот, отдельно веб-аппка - и обе общаются с внешней базкой
#
#
# TODO: отделить сценарии для прода и для теста
# TODO: прогнать автотесты перед деплоем в прод!
name: CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  DOCKER_HOST: "unix:///var/run/docker.sock"
jobs:
  build_python:
    runs-on: [self-hosted, linux]
    steps:
    - uses: actions/checkout@v3
    - name: "Env file"
      run: |
          env > local.env
          echo "\nAPI_KEY: ${{ secrets.API_KEY }}" >> local.env
          echo "\nDATABASE_FILE: ${{ secrets.DATABASE_FILE }}" >> local.env
          echo "\nDJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> local.env
          echo "\nDJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}" >> local.env
          echo "\nDJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}" >> local.env
          echo "\nDJANGO_STATIC_ROOT: ${{ secrets.DJANGO_STATIC_ROOT }}" >> local.env
    - name: "Build new container"
      run: docker-compose build

  deploy_python:
    runs-on: [self-hosted, linux]
    needs: build_python
    steps:
    - uses: actions/checkout@v3
    - name: "Env file"
      run: |
          env > local.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> local.env
          echo "DATABASE_FILE=${{ secrets.DATABASE_FILE }}" >> local.env
          echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> local.env
          echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> local.env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> local.env
          echo "DJANGO_STATIC_ROOT=${{ secrets.DJANGO_STATIC_ROOT }}" >> local.env
    - name: "Stop all running containers"
      run: docker-compose down
    - name: "Run migrations"
      run: docker-compose run django-app python3 /usr/src/app/manage.py migrate
    - name: "Dirty update of static files"
      run: |
           rm -rf /home/webtgbot/static
           cp -rf static /home/webtgbot/
    - name: "Run new"
      run: docker-compose up -d
#
#  # This workflow contains a single job called "build"
#  debug:
#    # The type of runner that the job will run on
#    runs-on: [self-hosted, linux]
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v3
#      - name: Run a one-line script
#        run: echo Hello, world!
#      - name: Check where are we?
#        run: |
#          whoami
#          pwd
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,

