from telegram import (
    Poll,
    ParseMode,
    KeyboardButton,
    KeyboardButtonPollType,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from telegram.ext import (
    Updater,
    CommandHandler,
    PollAnswerHandler,
    PollHandler,
    MessageHandler,
    Filters,
    CallbackContext,
    CallbackQueryHandler
)
from ..models import *

class MakingVerificationRequest():

    @staticmethod
    def _get_verification_request(user: User):
        verification_requests = VerificationRequest.objects.filter(user=user)
        return verification_requests[len(verification_requests)-1]

    @staticmethod
    def ask_flat(update: Update, context: CallbackContext, user: User):
        FIRST_FLAT = 463
        LAST_FLAT = 504
        keyboard = []
        floor = []
        for i in range(FIRST_FLAT, LAST_FLAT+1):
            floor.append(InlineKeyboardButton(str(i), callback_data="owning_flat_"+str(i)))
            if (i-FIRST_FLAT+1)%3 == 0:
                keyboard.append(floor)
                floor = []
        keyboard.append(floor)
        keyboard.append([InlineKeyboardButton("–ù–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã", callback_data="owning_flat_none")])
        markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text("üè† –£–∫–∞–∂–∏—Ç–µ, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–º –∫–∞–∫–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å:", reply_markup=markup)

        verification_request = VerificationRequest(
            user=user,
            section="10 —Å–µ–∫—Ü–∏—è" # TODO: —ç—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–∞—Ä–¥–∫–æ–¥–æ–º
        )
        verification_request.save()

    @staticmethod
    def catch_flat(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        if  hasattr(update,'data'):
            verification_request.flat = update['data']
        else:
            verification_request.flat = update.message.text
        verification_request.save()

        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ'
        )

    @staticmethod
    def ask_parking(update: Update, context: CallbackContext, user: User):
        keyboard = []
        keyboard.append([InlineKeyboardButton("–ù–µ—Ç –ø–∞—Ä–∫–∏–Ω–≥–∞", callback_data="owning_parking_none")])
        markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text("üè† –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∫–∞–∫–∏–µ —É –≤–∞—Å –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ—Å—Ç–∞ –ø–∞—Ä–∫–∏–Ω–≥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ù–µ—Ç –ø–∞—Ä–∫–∏–Ω–≥–∞\"", reply_markup=markup)

    @staticmethod
    def catch_parking(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        verification_request.parking = update.message.text
        verification_request.save()
        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–∫–∏–Ω–≥–µ'
        )

    @staticmethod
    def catch_no_parking(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        verification_request.parking = "----"
        verification_request.save()

        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á—Ç–æ –ø–∞—Ä–∫–∏–Ω–≥–∞ –Ω–µ—Ç'
        )

    @staticmethod
    def ask_storeroom(update: Update, context: CallbackContext, user: User):
        keyboard = []
        keyboard.append([InlineKeyboardButton("–ù–µ—Ç –∫–ª–∞–¥–æ–≤–æ–∫", callback_data="owning_parking_none")])
        markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text("üè† –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∫–∞–∫–∏–µ —É –≤–∞—Å –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∞–¥–æ–≤–∫–∏ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ù–µ—Ç –∫–ª–∞–¥–æ–≤–æ–∫\"", reply_markup=markup)

    @staticmethod
    def catch_storeroom(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        verification_request.storeroom = update.message.text
        verification_request.save()
        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–¥–æ–≤–∫–∞—Ö'
        )

    @staticmethod
    def catch_no_storeroom(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        verification_request.storeroom = "-----"
        verification_request.save()
        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á—Ç–æ –∫–ª–∞–¥–æ–≤–∫–∏ –Ω–µ—Ç'
        )

    @staticmethod
    def ask_commerce(update: Update, context: CallbackContext, user: User):
        keyboard = []
        keyboard.append([InlineKeyboardButton("–ù–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏", callback_data="owning_parking_none")])
        markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text("üè† –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∫–∞–∫–∞—è —É –≤–∞—Å –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ù–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏\"", reply_markup=markup)

    @staticmethod
    def catch_commerce(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        verification_request.commerce = update.message.text
        verification_request.save()
        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'
        )

    @staticmethod
    def catch_no_commerce(update: Update, context: CallbackContext, user: User):
        verification_request = MakingVerificationRequest._get_verification_request(user)
        verification_request.commerce = "-----"
        verification_request.save()
        update.message.reply_text(
            '–ü–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á—Ç–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–µ—Ç'
        )


    @staticmethod
    def tell_verification_is_pending(update: Update, context: CallbackContext, user: User):
        update.message.reply_text(
            '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –û–Ω —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.'
        )




















